/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package me.khanh.clothingshopsalemanagement.view.panel;

import com.raven.datechooser.DateBetween;
import com.raven.datechooser.DateChooser;
import com.raven.datechooser.listener.DateChooserAction;
import com.raven.datechooser.listener.DateChooserAdapter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import lombok.Getter;
import me.khanh.clothingshopsalemanagement.model.ClothingShopSaleManagement;
import me.khanh.clothingshopsalemanagement.model.order.Order;
import me.khanh.clothingshopsalemanagement.model.order.OrderDAO;
import me.khanh.clothingshopsalemanagement.util.DateUtil;
import me.khanh.clothingshopsalemanagement.view.panel.order.OrderInfoPanel;

/**
 *
 * @author ADMIN
 */
public class OrderManagementPanel extends javax.swing.JPanel {

    @Getter
    private final DashboardPanel dashboard;
    @Getter
    private final OrderDAO orderDAO;
    @Getter
    private final HashMap<Integer, Order> currentOrders = new HashMap<>();
    @Getter
    private final DateChooser dateChooser = new DateChooser();

    /**
     * Creates new form OrderManagementPanel
     *
     * @param dashboardPanel
     */
    public OrderManagementPanel(DashboardPanel dashboardPanel) {
        initComponents();
        this.dashboard = dashboardPanel;
        this.orderDAO = ClothingShopSaleManagement.getInstance().getDAOManager().getOrderDAO();

        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table.setCellSelectionEnabled(false);
        table.setRowSelectionAllowed(true);

        table.getColumn("Order ID").setPreferredWidth(25);

        dateChooser.setTextField(dateText);

        dateChooser.setDateSelectionMode(DateChooser.DateSelectionMode.BETWEEN_DATE_SELECTED);
        dateChooser.setSelectedDate(new Date());
        dateText.setText("");

        dateChooser.addActionDateChooserListener(new DateChooserAdapter() {
            @Override
            public void dateBetweenChanged(DateBetween dateBetween, DateChooserAction action) {
                RowFilter<Object, Object> filter = new RowFilter<Object, Object>() {
                    @Override
                    public boolean include(Entry entry) {
                        String stringDate = (String) entry.getValue(1);
                        try {
                            Date date = DateUtil.parseDate(stringDate);
                            Date from = dateBetween.getFromDate();
                            Date to = new Date(dateBetween.getToDate().getTime() + 1000 * 60 * 60 * 24);
                            return date.getTime() >= from.getTime() && date.getTime() < to.getTime();
                        } catch (ParseException ex) {
                            Logger.getLogger(OrderManagementPanel.class.getName()).log(Level.SEVERE, null, ex);
                            throw new RuntimeException(ex);
                        }
                    }
                };
                ((TableRowSorter<DefaultTableModel>) table.getRowSorter()).setRowFilter(filter);
            }
        });

        updateOrders();
    }

    private void updateOrders() {
        DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(tableModel);
        table.setRowSorter(rowSorter);

        tableModel.setRowCount(0);
        currentOrders.clear();

        dashboard.getMainFrame().showLoading();

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

        orderDAO.getAll().thenAccept((orders) -> {
            for (Order order : orders) {
                tableModel.addRow(new Object[]{order.getOrderID(), dateFormat.format(order.getOrderDate()), order.getCustomerName(), order.getCustomerPhone(), order.getTotal()});
                currentOrders.put(order.getOrderID(), order);
            }
            dashboard.getMainFrame().hideLoading();
        }).exceptionally((t) -> {
            dashboard.getMainFrame().hideLoading();
            t.printStackTrace();
            throw new RuntimeException(t);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        addOrderButton = new javax.swing.JButton();
        infoButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        orderManagementButton = new javax.swing.JLabel();
        dateText = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();

        jPanel1.setMaximumSize(new java.awt.Dimension(640, 440));
        jPanel1.setMinimumSize(new java.awt.Dimension(640, 440));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Date", "Customer Name", "Customer Phone", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setColumnSelectionAllowed(true);
        table.getTableHeader().setReorderingAllowed(false);
        tableScrollPane.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        addOrderButton.setBackground(new java.awt.Color(75, 174, 79));
        addOrderButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        addOrderButton.setForeground(new java.awt.Color(250, 255, 248));
        addOrderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        addOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButtonActionPerformed(evt);
            }
        });

        infoButton.setBackground(new java.awt.Color(33, 150, 243));
        infoButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        infoButton.setForeground(new java.awt.Color(250, 255, 248));
        infoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/information.png"))); // NOI18N
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(244, 67, 54));
        removeButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        removeButton.setForeground(new java.awt.Color(250, 255, 248));
        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remove.png"))); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        orderManagementButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        orderManagementButton.setText("Order Management");

        dateText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        searchLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchLabel.setText("Search:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(orderManagementButton)
                            .addComponent(searchLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(addOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(infoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(orderManagementButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOrderButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 642, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 1, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(
                    this,
                    "Please select product you want to show info!",
                    "WARNING",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = currentOrders.get((int) table.getModel().getValueAt(table.convertRowIndexToModel(row), 0));
        assert order != null;

        dashboard.getMainFrame().showLoading();
        orderDAO.deleteOrder(order.getOrderID()).thenRun(() -> {
            updateOrders();
            JOptionPane.showMessageDialog(
                    this,
                    "Deleted order " + order.getOrderID() + "!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
        }).exceptionally((t) -> {
            t.printStackTrace();
            dashboard.getMainFrame().hideLoading();
            throw new RuntimeException(t);
        });
    }//GEN-LAST:event_removeButtonActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(
                    this,
                    "Please select product you want to show info!",
                    "WARNING",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = currentOrders.get((int) table.getModel().getValueAt(table.convertRowIndexToModel(row), 0));
        showOrderInfo(order);
    }//GEN-LAST:event_infoButtonActionPerformed

    private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
        dashboard.openOrderPanel();

    }//GEN-LAST:event_addOrderButtonActionPerformed

    public void showOrderInfo(Order order) {
        OrderInfoPanel panel = new OrderInfoPanel(order);
        JDialog dialog = new JDialog(dashboard.getMainFrame(), "Order ID: " + order.getOrderID(), true);
        dialog.setContentPane(panel);
        dialog.pack();
        dialog.setLocationRelativeTo(dashboard.getMainFrame());
        dialog.setResizable(false);
        dialog.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOrderButton;
    private javax.swing.JTextField dateText;
    private javax.swing.JButton infoButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel orderManagementButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
